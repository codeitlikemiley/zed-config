[
  // put key-bindings here that you want to unbind
  //
  {
    "bindings": {
      "f8": null,
      "shift-f8": null,
      "ctrl-1": null,
      "ctrl-2": null,
      "ctrl-3": null,
      "ctrl-4": null,
      "ctrl-5": null,
      "ctrl-6": null,
      "ctrl-7": null,
      "ctrl-8": null,
      "ctrl-9": null,
      "ctrl-0": null,
      "alt-t": null, // task re-run
      "cmd-h": null, // hide
      "cmd-?": null,
      "alt-cmd-x": null,
      "alt-shift-t": null, // task spawn
      "cmd-shift-b": "workspace::ToggleRightDock",
      "cmd-k cmd-z": "zed::ToggleFullScreen",
      "cmd-shift-o": "workspace::Open",
      "cmd-shift-c": "zed::OpenLocalTasks",
      "cmd-f1": "project_panel::ToggleFocus",
      "cmd-f2": "diagnostics::Deploy"
    }
  },
  // Cannot be remapped
  {
    "bindings": {
      "cmd-b": null,
      "cmd-shift-m": null,
      "shift-space": null,
      "cmd-j": null
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "cmd-k k": "pane::SplitUp",
      "cmd-k j": "pane::SplitDown",
      "cmd-k h": "pane::SplitLeft",
      "cmd-k l": "pane::SplitRight",
      // cannot disable ctrl-1
      "cmd-1": ["pane::ActivateItem", 0],
      "cmd-2": ["pane::ActivateItem", 1],
      "cmd-3": ["pane::ActivateItem", 2],
      "cmd-4": ["pane::ActivateItem", 3],
      "cmd-5": ["pane::ActivateItem", 4],
      "cmd-6": ["pane::ActivateItem", 5],
      "cmd-7": ["pane::ActivateItem", 6],
      "cmd-8": ["pane::ActivateItem", 7],
      "cmd-9": ["pane::ActivateItem", 8]
    }
  },
  // vim keybinding like for project panel
  {
    "context": "ProjectPanel",
    "bindings": {
      "c": "project_panel::CopyPath",
      "r": "project_panel::Rename",
      "x": "project_panel::Delete",
      "f": "project_panel::RevealInFinder",
      "p": "project_panel::CopyRelativePath",
      "q": "project_panel::CollapseAllEntries",
      "a": "project_panel::NewFile",
      "s": "project_panel::NewSearchInDirectory",
      "l": "project_panel::ExpandSelectedEntry",
      "h": "project_panel::CollapseSelectedEntry",
      "k": "menu::SelectPrev",
      "j": "menu::SelectNext"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space": "project_panel::Open"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-r": "task::Rerun",
      "cmd-shift-r": "task::Spawn",
      "ctrl-`": "workspace::ToggleBottomDock"
    }
  },
  // Multi Select Keys
  {
    "context": "Editor",
    "bindings": {
      "cmd-i": "editor::ToggleInlayHints",
      "cmd-m": "editor::MoveToEnclosingBracket",
      "cmd-e": [
        "editor::SelectNext",
        {
          "replace_newest": true
        }
      ],
      "cmd-shift-e": [
        "editor::SelectPrevious",
        {
          "replace_newest": true
        }
      ],
      "cmd-d": [
        "editor::SelectNext",
        {
          "replace_newest": false
        }
      ],
      "cmd-shift-d": [
        "editor::SelectPrevious",
        {
          "replace_newest": false
        }
      ]
    }
  },
  // put key-bindings here if you want them to work in normal & visual mode
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "cmd-o": "outline::Toggle",
      // vim bindings for Diagnostics
      "[ e": "editor::GoToDiagnostic",
      "] e": "editor::GoToPrevDiagnostic",
      // pane movements
      "alt-shift-h": ["workspace::SwapPaneInDirection", "Left"],
      "alt-shift-l": ["workspace::SwapPaneInDirection", "Right"],
      "alt-shift-k": ["workspace::SwapPaneInDirection", "Up"],
      "alt-shift-j": ["workspace::SwapPaneInDirection", "Down"],
      "alt-h": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-l": ["workspace::ActivatePaneInDirection", "Right"],
      "alt-k": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  // put key-bindings here if you want them to work in insert mode
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown",
      "alt-l": "editor::SelectLargerSyntaxNode",
      "alt-h": "editor::SelectSmallerSyntaxNode"
    }
  }
]
